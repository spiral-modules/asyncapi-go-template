import {File} from '@asyncapi/generator-react-sdk'
import {GoGenerator} from '@asyncapi/modelina'

/**
 * @link https://github.com/asyncapi/go-watermill-template/blob/master/template/index.js
 * @param {{}} asyncapi
 * @param {{[key: string]: any}} params
 */
export default async function ({asyncapi, params}) {
  if (asyncapi.version() !== '2.4.0') { // duty hack. the reason: https://github.com/asyncapi/modelina/issues/954
    asyncapi['_json'].asyncapi = '2.4.0'
  }

  const generator = new GoGenerator({
    presets: [{
      struct: {
        field({fieldName, field, renderer, type}) {
          const fieldType = renderer.renderType(field)

          if (fieldName === 'additionalProperties' && fieldType.endsWith('interface{}')) {
            return
          }

          const formattedFieldName = renderer.nameField(fieldName, field)

          return `${formattedFieldName} ${fieldType} \`json:"${fieldName}"\``
        },
      },
    }],
  })

  const models = await generator.generate(asyncapi)

  let content = ''

  models.forEach(model => {
    content += `${model.dependencies.join('\n')}\n${model.result}\n`
  })

  return (
    <File name="payloads.gen.go">
      {`// Code generated by "asyncapi/generator"; DO NOT EDIT.

package ${params.packageName}

${content.replaceAll(/^\s{2}/gm, "\t").trim()}
`}
    </File>
  )
}
